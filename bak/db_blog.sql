-- MySQL dump 10.13  Distrib 5.1.73, for redhat-linux-gnu (i386)
--
-- Host: localhost    Database: db_blog
-- ------------------------------------------------------
-- Server version	5.1.73

/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;

--
-- Table structure for table `t_article`
--

DROP TABLE IF EXISTS `t_article`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `t_article` (
  `id` int(10) NOT NULL AUTO_INCREMENT,
  `title` varchar(100) CHARACTER SET utf8 NOT NULL,
  `content` text CHARACTER SET utf8 NOT NULL,
  `type` varchar(50) CHARACTER SET utf8 NOT NULL,
  `time` datetime NOT NULL,
  `clicks` int(50) NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=MyISAM AUTO_INCREMENT=9 DEFAULT CHARSET=latin1;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `t_article`
--

LOCK TABLES `t_article` WRITE;
/*!40000 ALTER TABLE `t_article` DISABLE KEYS */;
INSERT INTO `t_article` VALUES (1,'Node.js做的新博客，记录自己学习过程，从今天开始！','<p><span style=\"font-size: 18px;\"><br></span></p><hr><p><span style=\"font-size: 18px;\"><br></span></p><p><span style=\"font-size: 24px; font-family: \'Comic Sans MS\'; font-weight: bold;\">累死我了，用的Node.js做的，现学现用，赶了两天时间，总算搞定了，主要功能都有了，还有一些其他的功能以后再加吧，找工作要紧。欢迎互加友链。</span></p><p><span style=\"font-size: 24px; font-family: \'Comic Sans MS\';\"><br></span></p><p><span style=\"font-family: \'Comic Sans MS\'; font-size: 36px; line-height: 34.2857170104981px;\">联系QQ:1005910519</span></p>','Other','2015-10-31 11:00:19',30),(2,'Centos搭建环境Node.js','<p style=\"margin-left: 50px;\"><span style=\"font-family: \'Comic Sans MS\';\"><span style=\"font-size: 18px;\">在window上开发的网站，做好了要转移到Linux上，需要搭建Node.js环境</span></span></p><ol><ol><ol><li><span style=\"font-family: \'Comic Sans MS\';\"><span style=\"font-size: 18px;\">&nbsp;</span><span style=\"font-size: 18px;\">yum </span><span class=\"token function\" style=\"font-size: 18px;\">install</span><span style=\"font-size: 18px;\"> gcc-c++ </span><span class=\"token function\" style=\"font-size: 18px;\">make</span></span></li><li><span style=\"font-family: \'Comic Sans MS\';\"><span style=\"font-size: 18px;\">curl --silent --location https://rpm.nodesource.com/setup </span><span class=\"token operator\" style=\"font-size: 18px;\">|</span><span style=\"font-size: 18px;\"> </span><span class=\"token function\" style=\"font-size: 18px;\">bash</span><span style=\"font-size: 18px;\"> -</span></span></li><li><span style=\"font-family: \'Comic Sans MS\';\"><span class=\"token function\"><span style=\"font-size: 18px;\">yum -y </span><span class=\"token function\" style=\"font-size: 18px;\">install</span><span style=\"font-size: 18px;\"> nodejs</span></span></span></li></ol></ol></ol><p style=\"margin-left: 50px;\"><span class=\"token function\"><span style=\"font-size: 18px; font-family: \'Comic Sans MS\';\"><br></span></span></p><p style=\"margin-left: 50px;\"><span style=\"font-family: \'Comic Sans MS\';\"><span style=\"font-size: 18px;\">Complete!</span></span></p><p style=\"margin-left: 50px;\"><span class=\"token function\"><span style=\"font-size: 18px; font-family: \'Comic Sans MS\';\"><br></span></span></p><p style=\"margin-left: 50px;\"><span style=\"font-family: \'Comic Sans MS\';\"><span style=\"font-size: 18px;\">node -v 测试安装是否成功</span></span><span class=\"token function\"><span style=\"font-size: 18px;\"><br></span><br></span></p>','Linux','2015-11-01 01:46:42',12),(3,'Centos安装MySQL','<h1 style=\"margin-left: 50px;\"><span style=\"font-family: \'Courier New\'; font-size: 24px; line-height: 19.7999992370605px; font-weight: bold;\">下面是MySQL环境搭建：</span></h1><p style=\"margin-left: 75px;\"><span style=\"font-size: 18px; font-family: \'Courier New\';\">安装 ：<span style=\"font-weight: bold;\">yum install -y mysql mysql-server mysql-deve</span></span></p><p style=\"margin-left: 75px;\"><span style=\"font-size: 18px; font-family: \'Courier New\';\">最后提示<span style=\"font-weight: bold;\">Complete</span>！安装完成</span></p><p style=\"margin-left: 75px;\"><span style=\"font-size: 18px; font-family: \'Courier New\';\">查看版本：<span style=\"font-weight: bold;\">rpm -qi mysql-server</span></span></p><p style=\"margin-left: 75px;\"><span style=\"font-family: \'Courier New\';\"><span style=\"font-size: 18px;\">启动：<span style=\"font-weight: bold;\">service mysqld start</span> &nbsp;或者&nbsp;</span><span style=\"font-size: 18px; font-weight: bold;\">/etc/init.d/mysqld start</span></span></p><p style=\"margin-left: 75px;\"><span style=\"font-family: \'Courier New\';\"><span style=\"font-size: 18px;\">&nbsp; &nbsp; 关闭：<span style=\"font-weight: bold;\">service mysqld stop </span>&nbsp;或者&nbsp;<span style=\"font-weight: bold;\">/etc/init.d/mysqld&nbsp;</span></span><span style=\"line-height: 1.42857143; font-size: 18px; font-weight: bold;\">stop &nbsp;</span></span></p><p style=\"margin-left: 75px;\"><span style=\"font-family: \'Courier New\';\"><span style=\"font-size: 18px;\">&nbsp; &nbsp; 重启：<span style=\"font-weight: bold;\">service mysqld restart</span>或者&nbsp;<span style=\"font-weight: bold;\">/etc/init.d/mysqld&nbsp;</span></span><span style=\"line-height: 1.42857143; font-size: 18px; font-weight: bold;\">restart</span><br></span></p><p style=\"margin-left: 75px;\"><span style=\"font-family: \'Courier New\';\"><span style=\"font-size: 18px;\">初始化：</span><span style=\"font-size: 18px; font-weight: bold;\">mysql_secure_installation</span></span></p><p><br></p>','SQL','2015-11-01 01:58:27',20),(4,'理解闭包','<h1><span style=\"font-size: 24px;\">什么是闭包？</span></h1><p><span style=\"font-size: 18px;\">严格的讲，闭包就是“</span><span style=\"font-weight: bold; font-size: 18px;\">有函数（环境）及其封闭的自由变量组成的集合体</span><span style=\"font-size: 18px;\">” ，好吧，这个含义我也不太明白。</span></p><p><br></p><p><span style=\"font-size: 18px;\">有一种说法：<span style=\"font-weight: bold;\">闭包就是子函数调用父函数中的变量，如果子函数没有释放，那么整个作用于链都会保存在内存中</span>。</span></p><p><span style=\"font-size: 18px;\">这个理解也对，但我觉得不完整，</span><span style=\"line-height: 1.42857143; font-size: 18px;\">看一个例子：</span></p><p><span class=\"Apple-tab-span\" style=\"white-space: pre; font-size: 18px;\">	</span><span style=\"font-size: 18px;\">function parent(){</span></p><p><span class=\"Apple-tab-span\" style=\"white-space: pre; font-size: 18px;\">		</span><span style=\"font-size: 18px;\">var count=1;</span></p><p><span class=\"Apple-tab-span\" style=\"white-space: pre; font-size: 18px;\">		</span><span style=\"font-size: 18px;\">function children(){</span></p><p><span class=\"Apple-tab-span\" style=\"white-space: pre; font-size: 18px;\">			</span><span style=\"font-size: 18px;\">return count++;</span></p><p><span class=\"Apple-tab-span\" style=\"white-space: pre; font-size: 18px;\">		</span><span style=\"font-size: 18px;\">}</span></p><p><span class=\"Apple-tab-span\" style=\"white-space: pre; font-size: 18px;\">		</span><span style=\"font-size: 18px;\">return children;</span></p><p><span class=\"Apple-tab-span\" style=\"white-space: pre; font-size: 18px;\">	</span><span style=\"font-size: 18px;\">}</span></p><p><span class=\"Apple-tab-span\" style=\"white-space: pre; font-size: 18px;\">	</span><span style=\"font-size: 18px;\">var resule=parent(); &nbsp;//这里result就是</span><span style=\"line-height: 1.42857143; font-size: 18px;\">children方法体，由于</span><span style=\"line-height: 1.42857143; font-size: 18px;\">resule</span><span style=\"line-height: 1.42857143; font-size: 18px;\">引用了</span><span style=\"line-height: 1.42857143; font-size: 18px;\">children对象，导致children函数不会被释放，里面的变量自然也会保存，这就形成了闭包。</span></p><p><span class=\"Apple-tab-span\" style=\"white-space: pre; font-size: 18px;\">	</span><span style=\"font-size: 18px;\">console.info(resule()) //1</span></p><p><span class=\"Apple-tab-span\" style=\"white-space: pre; font-size: 18px;\">	</span><span style=\"font-size: 18px;\">console.info(resule()) //2</span></p><p><span class=\"Apple-tab-span\" style=\"white-space: pre; font-size: 18px;\">	</span><span style=\"font-size: 18px;\">console.info(resule()) //3</span></p><p><span style=\"font-size: 18px;\">所以，我再补充一点，</span><span style=\"font-weight: bold; font-size: 18px;\">当一个函数返回它内部定义的函数时也是闭包</span><span style=\"font-size: 18px;\">。</span></p><p><br></p><p><br></p>','JavaScript','2015-11-01 02:58:24',12),(5,'数组去重-二分法','<p style=\"margin-left: 50px;\"><span style=\"font-size: 18px; font-family: Arial;\">我目前知道数组去重的方法有4种，这里说的是用<span style=\"font-weight: bold;\">二分法的思想</span>去重，看下面：</span></p><p style=\"margin-left: 50px;\"><span style=\"font-weight: bold; font-family: Arial;\"><span style=\"font-size: 18px; line-height: 25.7142868041992px;\">思想：</span><span style=\"font-size: 18px; line-height: 25.7142868041992px;\">利用递归，</span><span style=\"font-size: 18px; line-height: 25.7142868041992px;\">把大数组从中间分成两个数组，左边一个，右边一个，两个数组分别对比每一项，有相同的就重复了，没有相同的就插入到左边的数组里，然后返回左边的数组。</span></span></p><p style=\"margin-left: 50px;\"><span style=\"font-size: 18px; font-family: \'Times New Roman\';\">var arr = [1,1,1,2,2,3,3,4,4,5,5,6,6]; &nbsp;</span></p><p style=\"margin-left: 50px;\"><span style=\"font-family: \'Courier New\';\"><br></span></p><p style=\"margin-left: 50px;\"><span style=\"font-family: Arial;\"><span style=\"font-size: 18px;\">//</span><span style=\"font-size: 18px;\">s开始的坐标&nbsp;</span><span style=\"font-size: 18px;\">&nbsp; &nbsp; e结束的坐标</span></span></p><p style=\"margin-left: 50px;\"><span style=\"font-size: 18px; font-family: \'Times New Roman\';\">function bSort(s,e){</span></p><p style=\"margin-left: 50px;\"><span style=\"font-family: \'Times New Roman\';\"><span class=\"Apple-tab-span\" style=\"white-space: pre; font-size: 18px;\">	</span><span style=\"font-size: 18px;\">if(s==e){</span></span></p><p style=\"margin-left: 50px;\"><span class=\"Apple-tab-span\" style=\"font-family: \'Times New Roman\'; white-space: pre; font-size: 18px;\">		</span><span style=\"font-size: 18px;\"><span style=\"font-family: \'Times New Roman\';\">return [arr[s]]; </span><span style=\"font-family: Arial;\">&nbsp;</span></span><span style=\"font-size: 18px; line-height: 25.7142868041992px; font-family: Arial;\">//执行到这里说明递归到最底层了，开始返回了。</span></p><p style=\"margin-left: 50px;\"><span style=\"font-family: \'Times New Roman\';\"><span class=\"Apple-tab-span\" style=\"white-space: pre; font-size: 18px;\">	</span><span style=\"font-size: 18px;\">}</span></span></p><p style=\"margin-left: 50px;\"><span style=\"font-size: 18px;\"><span style=\"font-family: \'Courier New\';\">&nbsp; &nbsp; &nbsp; &nbsp;</span><span style=\"font-family: \'Times New Roman\';\"> /</span><span style=\"font-family: Arial;\">/这里使用二分的思想，用递归把数组从中间分开，左边一个，右边一个，为了后面的比较</span></span><span style=\"font-family: \'Times New Roman\';\"><br></span></p><p style=\"margin-left: 50px;\"><span style=\"font-family: \'Times New Roman\';\"><span class=\"Apple-tab-span\" style=\"white-space: pre; font-size: 18px;\">	</span><span style=\"font-size: 18px;\">var c = Math.floor((s+e)/2);</span></span></p><p style=\"margin-left: 50px;\"><span class=\"Apple-tab-span\" style=\"font-family: \'Times New Roman\'; white-space: pre; font-size: 18px;\">	</span><span style=\"font-size: 18px;\"><span style=\"font-family: \'Times New Roman\';\">var left = bSort(s,c); &nbsp; </span><span style=\"font-family: Arial;\">//left 就是下面比较后返回的数组</span></span></p><p style=\"margin-left: 50px;\"><span style=\"font-family: \'Times New Roman\';\"><span class=\"Apple-tab-span\" style=\"white-space: pre; font-size: 18px;\">	</span><span style=\"font-size: 18px;\">var right = bSort(c+1,e);</span></span></p><p style=\"margin-left: 50px;\"><span style=\"font-family: \'Times New Roman\';\"><br></span></p><p style=\"margin-left: 50px;\"><span style=\"font-family: \'Times New Roman\'; font-size: 18px;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style=\"font-size: 18px; font-family: Arial;\">//循环一个数组，跟另一个数组的每一项比较，把没找到的插入到数组里，找到了就说明已经有了。</span><br></p><p style=\"margin-left: 50px;\"><span style=\"font-family: \'Times New Roman\';\"><span class=\"Apple-tab-span\" style=\"white-space: pre; font-size: 18px;\">	</span><span style=\"font-size: 18px;\">for (var i = 0; i &lt; right.length; i++) {</span></span></p><p style=\"margin-left: 50px;\"><span style=\"font-family: \'Times New Roman\';\"><span class=\"Apple-tab-span\" style=\"white-space: pre; font-size: 18px;\">		</span><span style=\"font-size: 18px;\">if(!finInArr(left,right[i])){ &nbsp; &nbsp;&nbsp;</span></span></p><p style=\"margin-left: 50px;\"><span style=\"font-family: \'Times New Roman\';\"><span class=\"Apple-tab-span\" style=\"white-space: pre; font-size: 18px;\">			</span><span style=\"font-size: 18px;\">left.push(right[i]);</span></span></p><p style=\"margin-left: 50px;\"><span style=\"font-family: \'Times New Roman\';\"><span class=\"Apple-tab-span\" style=\"white-space: pre; font-size: 18px;\">		</span><span style=\"font-size: 18px;\">}</span></span></p><p style=\"margin-left: 50px;\"><span style=\"font-family: \'Times New Roman\';\"><span class=\"Apple-tab-span\" style=\"white-space: pre; font-size: 18px;\">	</span><span style=\"font-size: 18px;\">};</span></span></p><p style=\"margin-left: 50px;\"><span style=\"font-size: 18px;\"><span style=\"font-family: \'Times New Roman\';\">&nbsp; &nbsp; &nbsp; &nbsp; </span><span style=\"font-family: Arial;\">//返回一个数组，里面没有重复数据</span></span><br></p><p style=\"margin-left: 50px;\"><span style=\"font-family: \'Times New Roman\';\"><span class=\"Apple-tab-span\" style=\"white-space: pre; font-size: 18px;\">	</span><span style=\"font-size: 18px;\">return left;</span></span></p><p style=\"margin-left: 50px;\"><span style=\"font-size: 18px; font-family: \'Times New Roman\';\">}</span></p><p style=\"margin-left: 50px;\"><span style=\"font-size: 18px; font-family: Arial;\">//在数组中找一个数</span><br></p><p style=\"margin-left: 50px;\"><span style=\"font-size: 18px; font-family: \'Times New Roman\';\">function finInArr(arr,item){</span></p><p style=\"margin-left: 50px;\"><span style=\"font-family: \'Times New Roman\';\"><span class=\"Apple-tab-span\" style=\"white-space: pre; font-size: 18px;\">	</span><span style=\"font-size: 18px;\">for (var i = 0; i &lt; arr.length; i++) {</span></span></p><p style=\"margin-left: 50px;\"><span style=\"font-family: \'Times New Roman\';\"><span class=\"Apple-tab-span\" style=\"white-space: pre; font-size: 18px;\">		</span><span style=\"font-size: 18px;\">if(arr[i] == item){</span></span></p><p style=\"margin-left: 50px;\"><span style=\"font-family: \'Times New Roman\';\"><span class=\"Apple-tab-span\" style=\"white-space: pre; font-size: 18px;\">			</span><span style=\"font-size: 18px;\">return true;</span></span></p><p style=\"margin-left: 50px;\"><span style=\"font-family: \'Times New Roman\';\"><span class=\"Apple-tab-span\" style=\"white-space: pre; font-size: 18px;\">		</span><span style=\"font-size: 18px;\">}</span></span></p><p style=\"margin-left: 50px;\"><span style=\"font-family: \'Times New Roman\';\"><span class=\"Apple-tab-span\" style=\"white-space: pre; font-size: 18px;\">	</span><span style=\"font-size: 18px;\">};</span></span></p><p style=\"margin-left: 50px;\"><span style=\"font-family: \'Times New Roman\';\"><span class=\"Apple-tab-span\" style=\"white-space: pre; font-size: 18px;\">	</span><span style=\"font-size: 18px;\">return false;</span></span></p><p style=\"margin-left: 50px;\"><span style=\"font-size: 18px; font-family: \'Times New Roman\';\">}</span></p><p style=\"margin-left: 50px;\"><span style=\"font-family: \'Times New Roman\';\"><br></span></p><p style=\"margin-left: 50px;\"><span style=\"font-size: 18px; font-family: \'Times New Roman\';\">var result = bSort（0，arr.length-1）; &nbsp; // [1,2,3,4,5,6]</span></p><p style=\"margin-left: 50px;\"><span style=\"font-family: \'Times New Roman\';\"><br></span></p><p style=\"margin-left: 50px;\"><span style=\"font-size: 18px; font-family: Arial;\">执行到这里，result就是去重后的数组了。</span></p>','Arithmetic','2015-11-01 06:07:17',7),(6,'构建Express项目','<p><span style=\"font-family: Arial; font-size: 18px;\">上一节说的是Node.js的安装，附上链接 &nbsp;</span><a href=\"http://www.ofeast.cn/article/2\" style=\"font-family: \'Times New Roman\';\"><span style=\"font-size: 18px;\">Centos搭建环境Node.js</span></a></p><p><span style=\"font-family: Arial;\"><br></span></p><p><span style=\"font-family: Arial;\"><span style=\"font-size: 18px;\">Node.js环境搭建好了 ，还需要安装开发框架，express就是Node.js比较流行的WEB框架，它能给我们提供很多方便，</span><span style=\"line-height: 1.42857143; font-size: 18px;\">提高</span><span style=\"line-height: 1.42857143; font-size: 18px;\">开发效率。</span></span></p><p><span style=\"line-height: 1.42857143; font-family: Arial;\"><br></span></p><p><span style=\"font-family: Arial; font-size: 18px;\">安装只需要两步：</span></p><ol><li><span style=\"font-family: \'Times New Roman\'; font-size: 18px; font-weight: bold;\">npm install -g express</span></li><li><span style=\"font-family: \'Times New Roman\'; font-size: 18px; font-weight: bold;\">npm install -g express-generator</span></li></ol><p><span style=\"font-family: Arial;\"><br></span></p><p><span style=\"font-family: \'Times New Roman\'; font-size: 18px;\">npm是Node.js</span><span style=\"font-family: Arial; font-size: 18px;\">的一个包管理工具,语法：</span><span style=\"font-family: \'Times New Roman\'; font-size: 18px;\"> <span style=\"font-weight: bold;\">npm install [-g]</span></span><span style=\"font-family: Arial; font-size: 18px;\"><span style=\"font-weight: bold;\"> 包名</span> &nbsp; &nbsp; &nbsp; </span><span style=\"font-family: \'Times New Roman\'; font-size: 18px;\">&nbsp;-g</span><span style=\"font-family: Arial; font-size: 18px;\">代表了全局，在哪个路径下都能使用，不加-g只能在安装目录使用。</span></p><p><span style=\"font-family: \'Times New Roman\'; font-size: 18px;\">express-generator</span><span style=\"font-family: Arial; font-size: 18px;\">是</span><span style=\"font-family: \'Times New Roman\'; font-size: 18px;\">express</span><span style=\"font-family: Arial;\"><span style=\"font-size: 18px;\">的命令工具，如果不装就没法使用express命令。</span><br></span></p><p><span style=\"font-family: Arial;\"><br></span></p><p><span style=\"font-family: Arial; font-size: 18px;\">安装完后，输入命令</span><span style=\"font-family: \'Times New Roman\'; font-size: 18px; font-weight: bold;\"> express -V</span><span style=\"font-family: Arial; font-size: 18px;\"><span style=\"font-weight: bold;\"> </span>来测试是否安装成功。注意：是大写的</span><span style=\"font-family: \'Times New Roman\'; font-size: 18px;\">V</span></p><p><span style=\"font-family: Arial;\"><br></span></p><p><span style=\"font-family: Arial; font-size: 18px;\">下面开始快速构建</span><span style=\"font-family: \'Times New Roman\'; font-size: 18px;\">express</span><span style=\"font-family: Arial; font-size: 18px;\">项目，进入你要存放项目的目录，输入以下命令：</span></p><p><span style=\"font-weight: bold;\"><span style=\"font-family: \'Times New Roman\'; font-size: 18px;\">express [-e]</span><span style=\"font-family: Arial; font-size: 18px;\"> 项目名称</span></span></p><p><span style=\"font-family: Arial;\"><br></span></p><p><span style=\"font-family: Arial; font-size: 18px;\">执行完后会在当前目录创建一个项目文件夹。</span></p><p><span style=\"font-family: Arial; font-size: 18px;\">-e 代表使用ejs模板引擎 ，默认使用</span><span style=\"font-family: \'Times New Roman\'; font-size: 18px;\">jade</span><span style=\"font-family: Arial; font-size: 18px;\">模板引擎</span></p><p><span style=\"font-family: Arial;\"><br></span></p><p><span style=\"font-family: Arial; font-size: 18px;\">到这里</span><span style=\"font-family: \'Times New Roman\'; font-size: 18px;\">Node.js</span><span style=\"font-family: Arial; font-size: 18px;\">的项目就构建完毕了</span><span style=\"font-family: Arial; font-size: 18px; line-height: 25.7142868041992px;\">，你就可以在里面写你的Node.js了</span></p><p><span style=\"font-family: Arial;\"><br></span></p><p><span style=\"font-family: Arial;\"><br></span></p><p><span style=\"font-family: Arial;\"><br></span></p><p><br></p>','Node.js','2015-11-01 06:49:56',11),(7,'JavaScript作用域','<p style=\"margin-left: 50px;\"><span style=\"font-size: 18px; font-family: \'Times New Roman\';\">什么是作用域？</span></p><p style=\"margin-left: 50px;\"><span style=\"font-size: 18px; font-family: \'Times New Roman\';\"><span style=\"font-weight: bold;\">作用域就是变量的作用范围和生命周期</span>。</span></p><p style=\"margin-left: 50px;\"><span style=\"font-family: \'Times New Roman\'; font-weight: bold;\"><span style=\"font-size: 18px;\">作用域分3种：局部、全局、</span><a href=\"http://45.62.113.108/article/4\" target=\"_blank\"><span style=\"font-size: 18px;\">闭包</span></a></span></p><p style=\"margin-left: 50px;\"><span style=\"font-family: \'Times New Roman\';\"><br></span></p><p style=\"margin-left: 50px;\"><span style=\"font-size: 18px; font-family: \'Times New Roman\'; font-weight: bold;\">在函数中引用一个变量，首先会在当前的作用域查找，也叫局部作用域，如果找不到，会去父级作用域查找该变量，一直找到window，如果还没找到就会报错。</span></p><p style=\"margin-left: 50px;\"><span style=\"font-size: 18px; font-family: \'Times New Roman\';\">var v1 = \'global\';</span></p><p style=\"margin-left: 50px;\"><span style=\"font-size: 18px; font-family: \'Times New Roman\';\">function f1(){</span></p><p style=\"margin-left: 50px;\"><span style=\"font-family: \'Times New Roman\';\"><span class=\"Apple-tab-span\" style=\"white-space: pre; font-size: 18px;\">	</span><span style=\"font-size: 18px;\">console.log(v1); &nbsp;//</span><span style=\"line-height: 1.42857143; font-size: 18px;\">global</span></span></p><p style=\"margin-left: 50px;\"><span style=\"font-size: 18px; font-family: \'Times New Roman\';\">}</span></p><p style=\"margin-left: 50px;\"><span style=\"font-size: 18px; font-family: \'Times New Roman\';\">function f2(){</span></p><p style=\"margin-left: 50px;\"><span style=\"font-family: \'Times New Roman\';\"><span class=\"Apple-tab-span\" style=\"white-space: pre; font-size: 18px;\">	</span><span style=\"font-size: 18px;\">var v1 = \'local \';</span></span></p><p style=\"margin-left: 50px;\"><span style=\"font-family: \'Times New Roman\';\"><span class=\"Apple-tab-span\" style=\"white-space: pre; font-size: 18px;\">	</span><span style=\"font-size: 18px;\">console.log(v1); //</span><span style=\"line-height: 1.42857143; font-size: 18px;\">local</span><span style=\"line-height: 1.42857143; font-size: 18px;\">&nbsp;</span></span></p><p style=\"margin-left: 50px;\"><span style=\"font-size: 18px; font-family: \'Times New Roman\';\">}</span></p><p style=\"margin-left: 50px;\"><span style=\"font-size: 18px; font-family: \'Times New Roman\';\">function f3(){</span></p><p style=\"margin-left: 50px;\"><span style=\"font-family: \'Times New Roman\';\"><span class=\"Apple-tab-span\" style=\"white-space: pre; font-size: 18px;\">	</span><span style=\"font-size: 18px;\">console.log(v2); //报错</span></span></p><p style=\"margin-left: 50px;\"><span style=\"font-size: 18px; font-family: \'Times New Roman\';\">}</span></p><p style=\"margin-left: 50px;\"><span style=\"font-size: 18px; font-family: \'Times New Roman\';\">function f4(){</span></p><p style=\"margin-left: 50px;\"><span style=\"font-family: \'Times New Roman\';\"><span class=\"Apple-tab-span\" style=\"white-space: pre; font-size: 18px;\">	</span><span style=\"font-size: 18px;\">console.log(v1); &nbsp;//undefined</span></span></p><p style=\"margin-left: 50px;\"><span style=\"font-family: \'Times New Roman\';\"><span class=\"Apple-tab-span\" style=\"white-space: pre; font-size: 18px;\">	</span><span style=\"font-size: 18px;\">var v1=\'local\'</span></span></p><p style=\"margin-left: 50px;\"><span style=\"font-size: 18px; font-family: \'Times New Roman\';\">}</span></p><p style=\"margin-left: 50px;\"><span style=\"font-family: \'Times New Roman\';\"><br></span></p><p style=\"margin-left: 50px;\"><span style=\"font-family: \'Times New Roman\';\"><span style=\"font-size: 18px;\">f4方法输出的是”</span><span style=\"line-height: 1.42857143; font-size: 18px;\">undefined</span><span style=\"line-height: 1.42857143; font-size: 18px;\">“，因为变量和函数是有预解析的</span></span></p><p style=\"margin-left: 50px;\"><span style=\"font-family: \'Times New Roman\'; font-weight: bold;\"><span style=\"font-size: 18px;\">在访问变量之前，代码会进行预解析，把所有的变量提到当前作用域的最上面</span><span style=\"line-height: 1.42857143; font-size: 18px;\">定义，并没有赋值，当预解析完毕，才会进行赋值；</span></span></p><p style=\"margin-left: 50px;\"><span style=\"font-family: \'Times New Roman\';\"><br></span></p><p style=\"margin-left: 50px;\"><span style=\"font-size: 18px; font-family: \'Times New Roman\'; font-weight: bold;\">函数作用域是定义时决定的，不是调用时决定的</span></p><p style=\"margin-left: 50px;\"><span style=\"font-size: 18px; font-family: \'Times New Roman\';\">var scope=\'global\';</span></p><p style=\"margin-left: 50px;\"><span style=\"font-size: 18px; font-family: \'Times New Roman\';\">function f1(){</span></p><p style=\"margin-left: 50px;\"><span style=\"font-family: \'Times New Roman\';\"><span class=\"Apple-tab-span\" style=\"white-space: pre; font-size: 18px;\">	</span><span style=\"font-size: 18px;\">var scope = \'f1\';</span></span></p><p style=\"margin-left: 50px;\"><span style=\"font-family: \'Times New Roman\';\"><span class=\"Apple-tab-span\" style=\"white-space: pre; font-size: 18px;\">	</span><span style=\"font-size: 18px;\">f2(); &nbsp;</span></span></p><p style=\"margin-left: 50px;\"><span style=\"font-size: 18px; font-family: \'Times New Roman\';\">}</span></p><p style=\"margin-left: 50px;\"><span style=\"font-size: 18px; font-family: \'Times New Roman\';\">function f2(){</span></p><p style=\"margin-left: 50px;\"><span style=\"font-family: \'Times New Roman\';\"><span class=\"Apple-tab-span\" style=\"white-space: pre; font-size: 18px;\">	</span><span style=\"font-size: 18px;\">console.log(scope);&nbsp;</span><span style=\"line-height: 1.42857143; font-size: 18px;\">&nbsp;</span><span style=\"line-height: 1.42857143; font-size: 18px;\">//</span><span style=\"line-height: 1.42857143; font-size: 18px;\">\'global\' ，定义决定作用域</span></span></p><p style=\"margin-left: 50px;\"><span style=\"font-size: 18px; font-family: \'Times New Roman\';\">}</span></p><p style=\"margin-left: 50px;\"><span style=\"font-size: 18px; font-family: \'Times New Roman\';\">f1();</span></p><p style=\"margin-left: 50px;\"><span style=\"font-family: \'Times New Roman\';\"><br></span></p><p style=\"margin-left: 50px;\"><br></p>','JavaScript','2015-11-01 09:57:57',8),(8,'undefined的前应后果','<p style=\"margin-left: 50px;\"><span style=\"font-family: \'Times New Roman\';\"><span style=\"font-size: 18px;\">初学者经常碰到<span style=\"color: rgb(255, 0, 0);\">XX is not defined的错误</span>&nbsp;，其实就是变量没有定义,为什么没有定义就会报错呢，出门请右转=》</span><a href=\"http://45.62.113.108/article/7\" target=\"_blank\"><span style=\"font-size: 18px; color: rgb(255, 0, 0); font-weight: bold;\">作用域</span></a></span></p><p style=\"margin-left: 50px;\"><span style=\"font-family: \'Times New Roman\'; font-size: 18px;\">1、<span style=\"font-weight: bold;\">变量未定义</span></span></p><p style=\"margin-left: 50px;\"><span style=\"font-family: \'Times New Roman\'; font-size: 18px;\">console.log(v1); &nbsp; &nbsp;//报错</span></p><p style=\"margin-left: 50px;\"><span style=\"font-family: \'Times New Roman\';\"><br></span></p><p style=\"margin-left: 50px;\"><span style=\"font-family: \'Times New Roman\'; font-size: 18px;\">2、<span style=\"font-weight: bold;\">变量定义了没有赋值</span></span></p><p style=\"margin-left: 50px;\"><span style=\"font-family: \'Times New Roman\'; font-size: 18px;\">var v1;</span></p><p style=\"margin-left: 50px;\"><span style=\"font-family: \'Times New Roman\'; font-size: 18px;\">console.log(v1) &nbsp; //undefined</span></p><p style=\"margin-left: 50px;\"><span style=\"font-family: \'Times New Roman\'; font-size: 18px; line-height: 1.42857143;\">3、<span style=\"font-weight: bold;\">函数没有传参</span></span><br></p><p style=\"margin-left: 50px;\"><span style=\"font-family: \'Times New Roman\'; font-size: 18px;\">function show(name) {</span></p><p style=\"margin-left: 50px;\"><span style=\"font-family: \'Times New Roman\';\"><span class=\"Apple-tab-span\" style=\"white-space: pre; font-size: 18px;\">	</span><span style=\"font-size: 18px;\">consoel.log(name)</span></span></p><p style=\"margin-left: 50px;\"><span style=\"font-family: \'Times New Roman\'; font-size: 18px;\">}</span></p><p style=\"margin-left: 50px;\"><span style=\"font-family: \'Times New Roman\'; font-size: 18px;\">console.log(show()); &nbsp;&nbsp;</span><span style=\"font-family: \'Times New Roman\'; font-size: 18px; line-height: 25.7142868041992px;\">//undefined</span></p><p style=\"margin-left: 50px;\"><span style=\"font-family: \'Times New Roman\';\"><br></span></p><p style=\"margin-left: 50px;\"><span style=\"font-family: \'Times New Roman\'; font-size: 18px;\">4、<span style=\"font-weight: bold;\">函数return了， 没有值</span></span></p><p style=\"margin-left: 50px;\"><span style=\"font-family: \'Times New Roman\'; font-size: 18px;\">functoin show() {</span></p><p style=\"margin-left: 50px;\"><span style=\"font-family: \'Times New Roman\';\"><span class=\"Apple-tab-span\" style=\"white-space: pre; font-size: 18px;\">	</span><span style=\"font-size: 18px;\">return;</span></span></p><p style=\"margin-left: 50px;\"><span style=\"font-family: \'Times New Roman\'; font-size: 18px;\">}</span></p><p style=\"margin-left: 50px;\"><span style=\"font-family: \'Times New Roman\'; font-size: 18px;\">console.log(show());</span>&nbsp; &nbsp;&nbsp;<span style=\"font-family: \'Times New Roman\'; font-size: 18px; line-height: 25.7142868041992px;\">//undefined</span></p><p style=\"margin-left: 50px;\"><span style=\"font-family: \'Times New Roman\'; font-size: 18px; line-height: 1.42857143;\">5、<span style=\"font-weight: bold;\">函数没有return</span></span><br></p><p style=\"margin-left: 50px;\"><span style=\"font-family: \'Times New Roman\'; font-size: 18px;\">functoin show() {</span></p><p style=\"margin-left: 50px;\"><span style=\"font-family: \'Times New Roman\';\"><br></span></p><p style=\"margin-left: 50px;\"><span style=\"font-family: \'Times New Roman\'; font-size: 18px;\">}</span></p><p style=\"margin-left: 50px;\"><span style=\"font-family: \'Times New Roman\'; font-size: 18px;\">console.log(show());</span>&nbsp; &nbsp;&nbsp;<span style=\"font-family: \'Times New Roman\'; font-size: 18px; line-height: 25.7142868041992px;\">//undefined</span></p><p style=\"margin-left: 50px;\"><br></p>','JavaScript','2015-11-01 11:05:16',8);
/*!40000 ALTER TABLE `t_article` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `t_links`
--

DROP TABLE IF EXISTS `t_links`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `t_links` (
  `id` int(10) NOT NULL AUTO_INCREMENT,
  `url` varchar(100) CHARACTER SET utf8 NOT NULL,
  `name` varchar(50) CHARACTER SET utf8 NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=MyISAM AUTO_INCREMENT=4 DEFAULT CHARSET=latin1;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `t_links`
--

LOCK TABLES `t_links` WRITE;
/*!40000 ALTER TABLE `t_links` DISABLE KEYS */;
INSERT INTO `t_links` VALUES (1,'http://blog.artitstudio.pw','wilson404'),(2,'http://dar.k3r.cc/','香明\'s Blog'),(3,'http://www.abcdsxg.cn/','爱编程的时小光');
/*!40000 ALTER TABLE `t_links` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `t_type`
--

DROP TABLE IF EXISTS `t_type`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `t_type` (
  `id` int(50) NOT NULL AUTO_INCREMENT,
  `url` varchar(50) CHARACTER SET utf8 NOT NULL,
  `name` varchar(50) CHARACTER SET utf8 NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=MyISAM AUTO_INCREMENT=7 DEFAULT CHARSET=latin1;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `t_type`
--

LOCK TABLES `t_type` WRITE;
/*!40000 ALTER TABLE `t_type` DISABLE KEYS */;
INSERT INTO `t_type` VALUES (1,'JavaScript','JavaScript'),(2,'Node.js','Node.js'),(3,'Other','Other'),(4,'Linux','Linux'),(5,'SQL','SQL'),(6,'Arithmetic','Arithmetic');
/*!40000 ALTER TABLE `t_type` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `t_user`
--

DROP TABLE IF EXISTS `t_user`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `t_user` (
  `id` int(10) NOT NULL AUTO_INCREMENT,
  `username` varchar(50) CHARACTER SET utf8 NOT NULL,
  `password` varchar(50) CHARACTER SET utf8 NOT NULL,
  `time` date NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=MyISAM AUTO_INCREMENT=2 DEFAULT CHARSET=latin1;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `t_user`
--

LOCK TABLES `t_user` WRITE;
/*!40000 ALTER TABLE `t_user` DISABLE KEYS */;
INSERT INTO `t_user` VALUES (1,'admin','admin','0000-00-00');
/*!40000 ALTER TABLE `t_user` ENABLE KEYS */;
UNLOCK TABLES;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;

/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOTES=@OLD_SQL_NOTES */;

-- Dump completed on 2015-11-01 22:19:12
